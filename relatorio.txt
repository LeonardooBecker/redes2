O presente trabalho tem como objetivo simular um serviço de streaming, entre um servidor e diversos clientes que, paralelamente, solicitam um conteúdo ao servidor - no nosso caso, roteiros de filme em arquivo txt - que são então enviados para cada cliente separadamente.
Inicialmente, buscamos estabelecer a conexão entre o cliente e o servidor enviando dados genéricos, sem se preocupar com pacotes ou estruturas de dados. Após isso, decidimos então que enviaríamos roteiros de filmes em .txt.
Para lidar com diversos clientes ao mesmo tempo, solicitando arquivos diferentes ao mesmo tempo em que arquivos são enviados para outros clientes,  foi utilizado a estrutura de dados cliente_t, que contém todas as informações necessárias para realizar a conexão entre servidor 
e cliente, e enviar o dado desejado nos pacotes em ordem. Para lidar com a simultaneidade de enviar pacotes diferentes para clientes diferentes, já que os pacotes podem ser de tamanhos diferentes também, ou seja, o primeiro cliente a solicitar um conteúdo não necessariamente vai ser
o primeiro a ter a transmissão encerrado, utilizamos a estrutura de lista, onde cada nodo da lista é representado por uma estrutura cliente_t. Assim, na lista conseguimos adicionar e remover os clientes conforme os pacotes vão terminando de ser enviados.  

primeiro foi visado estabelecer a conexao entre o cliente e servidor de dados genéricos, sem se preocpar com pacotes ou estruturas de dado
Já nesse ponto decidimos a natureza do nosso stream - roteiros de filmes em txt.
em seguida foi proposto a aceitação de multiplos clientes por parte do servidor,
para que isso fosse possível se fez necessário as primeiras estruturas de dados, sendo elas o cliente, onde quarda as informações de endereço, host e stream do cliente, entre outros.
A outro estrutura de dados foi a lista, dado que não necessáriamente o primeiro cliente a solicitar os pacotes vai ser o primeiro ou último a deixar de receber, dado essa aleatoriadade,
a estrutura de lista se fez necessário para poder remover elementos especificos e inserir ( no caso do nosso trabalho sem ao final ).
Após isso foi necessário organizar os dados enviados, para que fosse possível fazer a validação da conexão, com isso foi proposto o pacote xxxxxx.
Dados essa sequência, foi tratado os resultados obtidos por parte de servidor e cliente para que fosse imprimido em formato de log para visualização direta.
